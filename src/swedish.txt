

char *swedish_speak( const char *str )
{
    static char buf[512];
    int iSyl;
    int length;
    bool i_seen;
    bool in_word;
    const char *pName;

    struct syl_type
    {
        char *old;
        char *new;
    };

    static const struct syl_type syl_table[] =
    {
        { "an",         "oon"           },
        { "au",         "oo"            },
        { "ew",         "oo"            },
        { "ow",         "oo"            },
        { "the",        "zee"           },
        { "th",         "t"             },
        { "tion",       "shun"          },
        { "a", "e" },   { "b", "b" },  { "c", "c" }, { "d", "d" },
        { "e", "e" },   { "f", "ff" }, { "g", "g" }, { "h", "h" },
        { "j", "j" },   { "k", "k" }, { "l", "l" },
        { "m", "m" },   { "n", "n" },  { "o", "u" }, { "p", "p" },
        { "q", "q" },   { "r", "r" },  { "s", "s" }, { "t", "t" },
        { "u", "oo" },  { "v", "f" },  { "w", "v" }, { "x", "x" },
        { "y", "y" },   { "z", "z" },
        { "", "" }
    };

    buf[0]      = '\0';
    in_word = FALSE;
    i_seen = FALSE;
    for ( pName = str; *pName != '\0'; pName += length )
    {
        if ( !str_prefix( " ", pName ) )
        {
            strcat( buf, " " );
            in_word = FALSE;
            i_seen = FALSE;
            length = 1;
        }
        else if ( !str_prefix( "e ", pName ) )
        {
            strcat( buf, "e-a" );
            length = 1;
        }
        else if ( !str_prefix( "en ", pName ) )
        {
            strcat( buf, "ee" );
            length = 2;
        }
        else if ( !str_prefix( "o", pName ) && in_word == FALSE )
        {
            strcat( buf, "oo" );
            in_word = TRUE;
            length = 1;
        }
        else if ( !str_prefix( "u", pName ) && in_word == FALSE )
        {
            strcat( buf, "u" );
            in_word = TRUE;
            length = 1;
        }
        else if ( !str_prefix( "e", pName ) && in_word == FALSE )
        {
            strcat( buf, "i" );
            in_word = TRUE;
            length = 1;
        }
        else if ( !str_prefix( "ir", pName ) && in_word == FALSE )
        {
            strcat( buf, "ur" );
            in_word = TRUE;
            length = 2;
        }
        else if ( !str_prefix( "i", pName ) )
        {
            if ( i_seen == FALSE && in_word == TRUE )
            {
                strcat( buf, "ee" );
                i_seen = TRUE;
            }
            else
                strcat( buf, "i" );
            in_word = TRUE;
            length = 1;
        }
        else for (iSyl = 0; (length = strlen(syl_table[iSyl].old)) != 0; iSyl++)
        {
            if ( !str_prefix( syl_table[iSyl].old, pName ) )
            {
                strcat( buf, syl_table[iSyl].new );
                in_word = TRUE;
                break;
            }
        }

        if ( length == 0 )
        {
            buf[strlen(buf)+1] = '\0';
            buf[strlen(buf)] = *pName;
            length = 1;
        }
    }

    return buf;
}


